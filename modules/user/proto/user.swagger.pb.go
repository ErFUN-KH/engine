// Code generated by swagger-to-go. DO NOT EDIT.
package userpb

import (
	"encoding/json"

	"github.com/fzerorubigd/balloon/pkg/assert"
	"github.com/fzerorubigd/balloon/pkg/grpcgw"
)

const paths = "{\"/v1/user/login\":{\"post\":{\"operationId\":\"Login\",\"parameters\":[{\"in\":\"body\",\"name\":\"body\",\"required\":true,\"schema\":{\"$ref\":\"#/definitions/userLoginRequest\"}}],\"responses\":{\"200\":{\"description\":\"A successful response.\",\"schema\":{\"$ref\":\"#/definitions/userUserResponse\"}}},\"tags\":[\"UserSystem\"]}},\"/v1/user/logout\":{\"get\":{\"operationId\":\"Logout\",\"responses\":{\"200\":{\"description\":\"A successful response.\",\"schema\":{\"$ref\":\"#/definitions/userLogoutResponse\"}}},\"tags\":[\"UserSystem\"]}},\"/v1/user/register\":{\"post\":{\"operationId\":\"Register\",\"parameters\":[{\"in\":\"body\",\"name\":\"body\",\"required\":true,\"schema\":{\"$ref\":\"#/definitions/userRegisterRequest\"}}],\"responses\":{\"200\":{\"description\":\"A successful response.\",\"schema\":{\"$ref\":\"#/definitions/userUserResponse\"}}},\"tags\":[\"UserSystem\"]}}}"
const definitions = "{\"userLoginRequest\":{\"properties\":{\"email\":{\"type\":\"string\"},\"password\":{\"type\":\"string\"}},\"type\":\"object\"},\"userLogoutResponse\":{\"type\":\"object\"},\"userRegisterRequest\":{\"properties\":{\"email\":{\"type\":\"string\"},\"password\":{\"type\":\"string\"}},\"type\":\"object\"},\"userUserResponse\":{\"properties\":{\"email\":{\"type\":\"string\"},\"id\":{\"format\":\"int64\",\"type\":\"string\"},\"status\":{\"$ref\":\"#/definitions/userUserStatus\"},\"token\":{\"type\":\"string\"}},\"type\":\"object\"},\"userUserStatus\":{\"default\":\"USER_STATUS_INVALID\",\"enum\":[\"USER_STATUS_INVALID\",\"USER_STATUS_REGISTERED\",\"USER_STATUS_ACTIVE\",\"USER_STATUS_BANNED\"],\"type\":\"string\"}}"

func init() {
	var (
		p = make(map[string]interface{})
		d = make(map[string]interface{})
	)

	assert.Nil(json.Unmarshal([]byte(paths), &p))
	assert.Nil(json.Unmarshal([]byte(definitions), &d))

	grpcgw.RegisterSwagger(p, d)
}

